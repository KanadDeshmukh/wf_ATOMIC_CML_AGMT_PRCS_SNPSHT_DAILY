with src as (
  select
    AGMT_ANCHR_ID,
    ltrim(rtrim(POL_NBR)) as POL_NBR,
    POL_EFF_DT,
    TYP_ID,
    INMY_AGMT_ANCHR_ID,
    ACQN_CD,
    ADT_FREQ_CD,
    ltrim(rtrim(BNDL_CD)) as BNDL_CD,
    CAN_DT,
    CAN_RSN_CD,
    UNDG_PGM_CD,
    CIID_MATCH_IND,
    CMS_PTY_ID,
    CPAN_IND,
    CUST_NBR,
    DAC_CD,
    DIVD_PAR_CD,
    EXC_CD,
    INSTL_CD,
    MODU_NBR,
    MP_CD,
    PLND_END_DT,
    POL_CONTR_TYP_CD,
    ltrim(rtrim(POL_SYM_CD)) as POL_SYM_CD,
    PORT_IND,
    translate(PRI_NMD_INSD_NM, '|', ' ') as PRI_NMD_INSD_NM,
    PRCG_OFC_CD,
    PRDR_SRC_CD,
    RATG_ORI_CD,
    REINS_WAQS_TRTY_CD,
    RENL_IND,
    RETRO_RATG_CD,
    RSK_TYP_CD,
    SELF_INSD_RETN_IND,
    SIC_CD,
    -- SRC_POL_NBR logic as in mapping:
    case when substr(ltrim(rtrim(POL_NBR)),1,1) in ('P','R') then substr(ltrim(rtrim(SRC_POL_NBR)),3,6) else ltrim(rtrim(SRC_POL_NBR)) end as SRC_POL_NBR,
    SRC_POL_EFF_DT,
    SRC_POL_SYM_CD,
    STS_CD,
    UNDG_PGM_CD as RAW_UNDG_PGM_CD, -- preserve raw for downstream logic
    V_INV_POOL_IND,
    BIL_TYP_CD,
    AGMT_TERM_IN_MNTH,
    CONTR_TYPE_CD,
    PERF_PROT_IND,
    SALE_DT,
    MKT_CD,
    PARNT_CHILD_CONTR_TYP_CD,
    PRI_NMD_INSD_FEIN_NBR,
    ASSM_PTNR_CTRY_POL_ID,
    ASSM_US_POL_NBR,
    cast(CEDE_PTNR_CTRY_ANCHR_ID as string) as CEDE_PTNR_CTRY_ANCHR_ID,
    DRVD_CONTR_CRCY_CD,
    FRNT_CD,
    NON_RENL_RSN_CD,
    ZI_POL_SYS_CONTR_ID,
    CROP_INS_TYP_NBR,
    CROP_REINS_YY,
    DRVD_SNDBL_TO_GVMNT_IND,
    POL_PRCG_HLD_RSN_CD,
    POL_PRCG_STS_CD,
    SRC_CO_CD,
    SRC_SYS_CD,
    MKT_PRD_SPEC_ID,
    PYMT_PLN_CD,
    MSTR_POL_NBR,
    TAIL_EXPI_DT,
    case when substr(ltrim(rtrim(POL_NBR)),1,1) = 'P' and substr(ltrim(rtrim(POL_NBR)),2,1) between '0' and '9' then substr(ltrim(rtrim(SRC_POL_NBR)),9,5) else null end as SRC_CERT_NBR
  from {{ source('raw', 'CML_AGMT') }}
  -- Partitioning logic can be applied here for parallelism if needed in Databricks
)
select * from src
